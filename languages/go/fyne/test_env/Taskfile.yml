# https://taskfile.dev

version: "3"

vars:
  OUTPUT_DIR: ./bin/
  WASM_DIR: ./wasm/
  PROJECT_NAME: testenv
  PORT: 9000

tasks:
  default:
    desc: Lists available tasks
    cmds:
      - task --list-all
    silent: true
  clean:
    desc: Removes the '{{.OUTPUT_DIR}}' and '{{.WASM_DIR}}' directories
    cmds:
      - rm -rf {{.OUTPUT_DIR}}
      - rm -rf {{.WASM_DIR}}
    silent: true
  runwasm:
    desc: Runs the app as a WASM project in the browser on port {{.PORT}}
    cmds:
      - fyne serve --sourceDir ./src/. --port {{.PORT}}
    ignore_error: true
  rundesktop:
    desc: Runs the desktop project
    cmds:
      - go run ./src/.
    silent: true
  lint:
    desc: Runs the golangci-lint and staticcheck tools
    cmds:
      - golangci-lint run
      - staticcheck ./src/...
    silent: true
  runproduction:
    desc: Runs the files in the {{.OUTPUT_FOLDER}} folder as-is, no build steps envoked. On port 9000
    dir: "{{.OUTPUT_DIR}}"
    cmds:
      - http-server . -p {{.PORT}} -o -c-1
    silent: true
  buildwasm:
    desc: Builds the WASM project
    cmds:
      - fyne package -os web --name {{.PROJECT_NAME}} --sourceDir ./src/.
    silent: true
  buildproduction:
    desc: Builds a production binary, minus debug information, for the current OS
    cmds:
      - mkdir -p bin
      - env GOOS=js GOARCH=wasm go build -ldflags="-s -w" -o {{.OUTPUT_DIR}}{{.PROJECT_NAME}}.wasm ./src/.
    silent: true
  test:
    desc: Tests the project.
    cmds:
      - go test -v ./src/.
    silent: true
  coverreport:
    desc: Shows test coverage report for the app
    cmds:
      - go test -coverprofile=coverage.out ./src/.
      - go tool cover -html=coverage.out
    silent: true
